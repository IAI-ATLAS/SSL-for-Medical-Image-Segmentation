experiment.name:
  value: first-shot
# Seed of this experiment to ensure reproducibility.
experiment.seed:
  value: 1337

# Model Configuration
model.name:
  value: ResnetClassifier
model.params.in_channels:
  value: 1
model.params.num_classes:
  value: 1
model.params.encoder_type:
  value: resnet50
model.params.pretraining_weights:
  #value: /home/ws/kg2371/projects/self-supervised-biomedical-image-segmentation/results/first-shot/NIHChestXrayDataModule/Mocov2/0035/dnn_weights-v9.ckpt
  #value: null
  #value: imagenet
  #value: /home/ws/kg2371/Downloads/imagenet_r50-21352794.pth # densecl imagenet
  #value: /home/ws/kg2371/Downloads/moco_v2_800ep_pretrain.pth.tar # mocov2 imagenet
  #value: /home/ws/kg2371/Downloads/resnet50_imagenet_bs2k_epochs600.pth.tar # imagenet simclr
model.params.encoder_frozen:
  value: true
# model.params.class_dict:
#   value: {0: bear, 1: teddy_bear, 2: dog, 3: cat, 4: zebra, 5: sheep, 6: cow}
model.loss_fcn:
  value: MSELoss

# Optimizer
model.optimizer.type:
  value: Adam
model.optimizer.params.lr:
  value: 0.001
# LR Scheduler
model.optimizer.lrs.type:
  value: ReduceLROnPlateau
model.optimizer.lrs.params.factor:
  value: 0.5
model.optimizer.lrs.params.patience:
  value: 5
model.optimizer.lrs.params.verbose:
  value: false
model.optimizer.lrs.params.cooldown:
  value: 0
model.optimizer.lrs.params.min_lr:
  value: 0.00001


# Trainer Configuration
train.trainer.max_epochs:
  value: 50
train.trainer.num_sanity_val_steps:
  value: 0
train.trainer.gpus:
  value: 1
train.trainer.reload_dataloaders_every_epoch:
  value: false

# Data Configuration
data.datamodule.name:
  #value: NIHChestXrayDataModule
  value: PneumoniaXrayDataModule
data.datamodule.root_dirs:
  value: 
    #local: /home/ws/kg2371/datasets/chestxray
    local: /home/ws/kg2371/datasets/pneumonia_xray
    iai_gpu: 
data.datamodule.device:
  value: 
    local
data.datamodule.arguments.dataset_size:
  value: 1.0
data.datamodule.arguments.initial_labeled_ratio:
  value: 1.0
data.datamodule.arguments.val_to_train_ratio:
  value: 0.2
data.datamodule.arguments.batch_size:
  value: 128
  # BACK
data.datamodule.arguments.drop_last:
  value: false
data.datamodule.arguments.labels_available:
  value: true

# Callbacks Configuration
train.callbacks.save_k_top_models:
  value: 1
train.callbacks.early_stopping_enabled:
  value: true
train.callbacks.early_stopping_patience:
  value: 40
train.callbacks.best_metrics_log_enabled:
  value: true
train.callbacks.log_best_metric_dict:
  value: {"val/loss":"min"}
train.callbacks.epoch_duration_enabled:
  value: true

# General Augmentations
# data.img_processing.norm_type:
#   value: per_image

data.img_processing.img_type:
  value: rgb_8_bit
data.img_processing.replay_processing_pipeline:
  value: false
data.img_processing.img_size:
  value: [256,256]


# Augmentations
data.img_processing.aug1.replay_processing_pipeline:
  value: false

# # Flip
# data.img_processing.aug1.aug_flip_prob:
#   value: 0.5

# # # Gaussian Blur
# data.img_processing.aug1.gaussian_blur_prop:
#   value: 0.5
# data.img_processing.aug1.gaussian_blur_kernel_size:
#   # Zero or odd
#   value: [0,3]
# data.img_processing.aug1.std_dev_range:
#   value: [0,0]

# # # Scale/Rotate/Shift
# data.img_processing.aug1.aug_shift_scale_rotate_prob:
#   value: 0.5
# data.img_processing.aug1.aug_shift_scale_rotate_shift_lim:
#   value: 0.1
# data.img_processing.aug1.aug_shift_scale_rotate_scale_lim:
#   value: 0.1
# data.img_processing.aug1.aug_shift_scale_rotate_rot_lim:
#   value: 10

# # Contrast/Brightness Adjustment
# data.img_processing.aug1.aug_rand_brightness_contrast_prob:
#   value: 0.5
# data.img_processing.aug1.aug_rand_brightness_contrast_brightness_limit:
#   value: 0.1
# data.img_processing.aug1.aug_rand_brightness_contrast_contrast_limit:
#   value: 0.1

# # Random Crop
# data.img_processing.aug1.random_resized_propability:
#   value: 0.5
# data.img_processing.aug1.random_resized_crop_size:
#   value: [128, 128]
# data.img_processing.aug1.random_resized_scale:
#   value: [0.8, 1.0]
# data.img_processing.aug1.random_resized_ratio:
#   value: [0.9, 1.1]